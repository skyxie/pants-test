[GLOBAL]
pants_version = "2.16.0"

backend_packages = [
  "pants.backend.python",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.pylint",
  "pants.backend.python.typecheck.mypy",
]

[python]
interpreter_constraints = ["CPython>=3.9.*"]
enable_resolves = true

[python.resolves]
dev = "build-support/dev.lockfile"
alpha = "build-support/alpha.lockfile"
beta = "build-support/beta.lockfile"

[python-repos]
indexes.add = ["%(env.PIP_EXTRA_INDEX_URL)s"]

[black]
interpreter_constraints = ["CPython>=3.9.*"]
install_from_resolve = "dev"
requirements =["//3rdparty:reqs-dev#black"]

[mypy]
interpreter_constraints = ["CPython>=3.9.*"]
install_from_resolve = "dev"
requirements = [
    "//3rdparty:reqs-dev#mypy",
    "//3rdparty:reqs-dev#pandas-stubs",
]
extra_type_stubs = ["pandas-stubs"]

[source]
root_patterns = ["src", "test"]

[pylint]
config = ".pylintrc"
install_from_resolve = "dev"
requirements =["//3rdparty:reqs-dev#pylint"]

[test]
output = "all"
use_coverage = true
report_dir = "dist/coverage/pytest_results"

[pytest]
args="-vv"

[coverage-py]
report = ["console", "xml"]
global_report = true
output_dir = "dist/coverage/python"
config = ".coveragerc"

[anonymous-telemetry]
enabled = false
